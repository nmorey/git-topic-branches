#!/bin/bash

source $(dirname $(readlink -f ${0}))/tools.sh
HEAD=$(gittools_curbranch)

matching=$(gittools_match_branch $HEAD)
if [ "$matching" == "" ]; then
	echo "No matching integration branch for '$HEAD'"
	exit 1
fi

TAG=$(git describe --exact-match  --match validated/20[0-9]**/$HEAD 2> /dev/null)
if [ $? -eq 0 ]; then
	echo "Series already checked ($TAG)"
	exit 0
fi

echo "Validating patch from $matching to $HEAD"

git cmd-prep || exit 1

(
	set -e
	for commit in $(git log --format=format:%H --reverse ^$matching HEAD); do
		git checkout -qf $commit
		git show --format=oneline -s HEAD
		git cmd-clean
		git cmd-build
		git cmd-check $commit
	done
)
RET=$?
if [ $RET -ne 0 ]; then
	echo "========== FAILED on commit $(git rev-parse HEAD) ================"
	git show --format=oneline -s ${commit}
else
	echo "========== SUCCESS ================"
	git tag -m "Checked" checked/$(gittools_gen_timestamp)/$HEAD
	git tag -m "Validated" validated/$(gittools_gen_timestamp)/$HEAD
fi
git checkout -f $HEAD
exit $RET
